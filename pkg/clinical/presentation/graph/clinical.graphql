extend type Query {
    patientHealthTimeline(input: HealthTimelineInput!): HealthTimeline!
    getMedicalData(patientID: String!): MedicalData

    getEpisodeOfCare(id: ID!): EpisodeOfCare

    # Conditions
    listPatientConditions(patientID: ID!, pagination:Pagination!): ConditionConnection

    # Encounter
    listPatientEncounters(patientID: String!, pagination: Pagination!): EncounterConnection

    # Observation
    getPatientTemperatureEntries(patientID: String!): [Observation!]
    getPatientBloodPressureEntries(patientID: String!): [Observation!]
    getPatientHeightEntries(patientID: String!): [Observation!]
    getPatientRespiratoryRateEntries(patientID: String!): [Observation!]
    getPatientPulseRateEntries(patientID: String!): [Observation!]
    getPatientBMIEntries(patientID: String!): [Observation!]
    getPatientWeightEntries(patientID: String!): [Observation!]

    # Allergy
    searchAllergy(name: String!, pagination: Pagination!): TerminologyConnection
    getAllergy(id: ID!): Allergy!
    listPatientAllergies(patientID: ID!, pagination:Pagination!): AllergyConnection
}

extend type Mutation {
    # EpisodeOfCare
    createEpisodeOfCare(episodeOfCare: EpisodeOfCareInput!): EpisodeOfCare
    endEpisodeOfCare(id: ID!): EpisodeOfCare

    # Encounter
    startEncounter(episodeID: String!): String!
    endEncounter(encounterID: String!): Boolean!

    # Observation
    recordTemperature(input: ObservationInput!): Observation!
    recordHeight(input: ObservationInput!): Observation!
    recordWeight(input: ObservationInput!): Observation!
    recordRespiratoryRate(input: ObservationInput!): Observation!
    recordPulseRate(input: ObservationInput!): Observation!
    recordBloodPressure(input: ObservationInput!): Observation!
    recordBMI(input: ObservationInput!): Observation!

    # Patient
    createPatient(input: PatientInput!): Patient!

    #  Conditions
    createCondition(input: ConditionInput!): Condition!

    # Allergy Intolerance
    createAllergyIntolerance(input: AllergyInput!): Allergy
}
