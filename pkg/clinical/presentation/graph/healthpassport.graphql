extend type Query {
  patientHealthTimeline(input: HealthTimelineInput!): HealthTimeline!

  findPatientsByMSISDN(msisdn: String!): PatientConnection!

  findPatients(search: String!): PatientConnection!

  getPatient(id: ID!): PatientPayload!

  openEpisodes(patientReference: String!): [FHIREpisodeOfCare!]!

  openOrganizationEpisodes(providerSladeCode: String!): [FHIREpisodeOfCare!]!

  problemSummary(patientID: String!): [String!]!

  visitSummary(encounterID: String!): Map!

  patientTimelineWithCount(episodeID: String!, count: Int!): [Map!]!

  patientTimeline(patientID: String!, count: Int!): [Map!]!

  searchFHIREncounter(params: Map!): FHIREncounterRelayConnection!

  searchFHIRCondition(params: Map!): FHIRConditionRelayConnection!

  searchFHIRAllergyIntolerance(
    params: Map!
  ): FHIRAllergyIntoleranceRelayConnection!

  searchFHIRObservation(params: Map!): FHIRObservationRelayConnection!

  searchFHIRMedicationStatement(
    params: Map!
  ): FHIRMedicationStatementRelayConnection!

  searchFHIRMedicationRequest(
    params: Map!
  ): FHIRMedicationRequestRelayConnection!

  searchFHIRServiceRequest(params: Map!): FHIRServiceRequestRelayConnection!

  searchFHIRComposition(params: Map!): FHIRCompositionRelayConnection!

  allergySummary(patientID: String!): [String!]!

  getMedicalData(patientID: String!): MedicalData

  searchOrganization(params: Map!): FHIROrganizationRelayConnection!

  findOrganizationByID(organizationID: String!): FHIROrganizationRelayPayload!
}

extend type Mutation {
  startEpisodeByOTP(input: OTPEpisodeCreationInput!): EpisodeOfCarePayload!

  startEpisodeByBreakGlass(
    input: BreakGlassEpisodeCreationInput!
  ): EpisodeOfCarePayload!

  upgradeEpisode(input: OTPEpisodeUpgradeInput!): EpisodeOfCarePayload!

  endEpisode(episodeID: String!): Boolean!

  startEncounter(episodeID: String!): String!

  endEncounter(encounterID: String!): Boolean!

  registerPatient(input: SimplePatientRegistrationInput!): PatientPayload!

  updatePatient(input: SimplePatientRegistrationInput!): PatientPayload!

  addNextOfKin(input: SimpleNextOfKinInput!): PatientPayload!

  addNHIF(input: SimpleNHIFInput): PatientPayload!

  createUpdatePatientExtraInformation(
    input: PatientExtraInformationInput!
  ): Boolean!

  createFHIRMedicationRequest(
    input: FHIRMedicationRequestInput!
  ): FHIRMedicationRequestRelayPayload!

  updateFHIRMedicationRequest(
    input: FHIRMedicationRequestInput!
  ): FHIRMedicationRequestRelayPayload!

  deleteFHIRMedicationRequest(id: ID!): Boolean!

  createFHIRAllergyIntolerance(
    input: FHIRAllergyIntoleranceInput!
  ): FHIRAllergyIntoleranceRelayPayload!

  updateFHIRAllergyIntolerance(
    input: FHIRAllergyIntoleranceInput!
  ): FHIRAllergyIntoleranceRelayPayload!

  createFHIRCondition(input: FHIRConditionInput!): FHIRConditionRelayPayload!

  updateFHIRCondition(input: FHIRConditionInput!): FHIRConditionRelayPayload!

  createFHIRServiceRequest(
    input: FHIRServiceRequestInput!
  ): FHIRServiceRequestRelayPayload!

  deleteFHIRServiceRequest(id: ID!): Boolean!

  createFHIRObservation(
    input: FHIRObservationInput!
  ): FHIRObservationRelayPayload!

  createFHIRComposition(
    input: FHIRCompositionInput!
  ): FHIRCompositionRelayPayload!

  updateFHIRComposition(
    input: FHIRCompositionInput!
  ): FHIRCompositionRelayPayload!

  deleteFHIRComposition(id: ID!): Boolean!

  deleteFHIRPatient(id: ID!): Boolean!

  deleteFHIRObservation(id: ID!): Boolean!

  createFHIROrganization(
    input: FHIROrganizationInput!
  ): FHIROrganizationRelayPayload!
}
