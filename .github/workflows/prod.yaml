name: Production Deployment

on: 
  push:
    branches:
      - main

  
jobs:
  deploy_to_prod:
    name: Deploy production server to google cloud run
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
         gcloud --quiet auth configure-docker
      - name: Build and Push Image
        run: |-
          docker build -t eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA .
          docker push eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:$GITHUB_SHA

      - name: Deploy to Google Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: ${{ secrets.SERVICE_NAME }}
          region: 'europe-west1'
          image: 'eu.gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.GCR_NAME }}:${{  github.sha }}'
          env_vars: |
            GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}
            FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}
            JWT_KEY=${{ secrets.JWT_KEY }}
            GOOGLE_PROJECT_NUMBER=${{ secrets.GOOGLE_PROJECT_NUMBER }}
            ENVIRONMENT=${{ secrets.ENVIRONMENT }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            ROOT_COLLECTION_SUFFIX=${{ secrets.ROOT_COLLECTION_SUFFIX }}
            CLOUD_HEALTH_PUBSUB_TOPIC=${{ secrets.CLOUD_HEALTH_PUBSUB_TOPIC }}
            CLOUD_HEALTH_DATASET_ID=${{ secrets.CLOUD_HEALTH_DATASET_ID }}
            CLOUD_HEALTH_FHIRSTORE_ID=${{ secrets.CLOUD_HEALTH_FHIRSTORE_ID }}
            OPENCONCEPTLAB_TOKEN=${{ secrets.OPENCONCEPTLAB_TOKEN }}
            SERVICE_HOST=${{ secrets.SERVICE_HOST }}
            OPENCONCEPTLAB_API_URL=${{ secrets.OPENCONCEPTLAB_API_URL }}
            SAVANNAH_ADMIN_EMAIL=${{ secrets.SAVANNAH_ADMIN_EMAIL }}
            AUTHSERVER_ENDPOINT=${{ secrets.AUTHSERVER_ENDPOINT }}
            CLIENT_ID=${{ secrets.CLIENT_ID }}
            CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
            AUTH_USERNAME=${{ secrets.AUTH_USERNAME }}
            AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}
            GRANT_TYPE=${{ secrets.GRANT_TYPE }}
            